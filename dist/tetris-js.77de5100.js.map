{"version":3,"sources":["classes/Point.ts","classes/Figure/Figure.ts","classes/RendererCanvas.ts","classes/Layout/Layout.ts","classes/FigureMaker.ts","classes/Tetris.ts","index.ts"],"names":[],"mappings":";;;;ACAA,AECA,AHDA,AEEA,AIFA,ILAA,AECA,AHDA,AEEA,AIFA,OLAA,AECA,CHDA,AEEA,AIFA,ELAA,AECA,CHDA,AEEA,AIFA,MLAA,AECA,CFDA,AECA,AHDA,AEEA,AIFA,CNAA,AEEA,AIFA,SLAA,AECA,CFDA,AECA,OHDA,AEEA,CFFA,AEEA,AIFA,CAAA;;ALEA,AECa,AHMb,AELA,AIFA,ILAY,ADOZ,AELA,AIFI,GHCS,CAAA,CHMb,CMPU,CHCG,EGDA,CLAb,AECmB,GGDF,CJEjB,MCDoB,CAAD,AGDF,CAAA,CHCc,CAAZ,EAAqB,EGD3B,EAAb;AHC6C,AHM7C,AELA,AIAA,IAAI,GAAG,EHDsC,CAAC,AGCpC,GHDuC,CAAJ,EGC7B,CAAC,OAAP,EAAV;ALFA,AECkD,AHMlD,AELA,AIEA,CLJA,AECa,GGGT,OLJQ,CDOZ,AELA,AIEY,GAAG,MLJf,EAAsB,GKII,CAAC,YAAA;ALHzB,ADWA,AEFA,AILA,ELJA,IKII,GAAJ,ENOA,AEFA,AILS,CLJT,CAAA,GDWA,CAAY,CAAZ,EAAuB,CAAvB,ECXA,ADWkC,CCXlC,CCSA,CAAY,EFEZ,EAAiD,CCXjD,CAAA,CCSA,EDTA,ADWA,AEFqB,CDTrB,CAAA,ADW2E,EEF3E,CDTA,CCS2B,MDT3B,ACSA,EAAsC;ADRtC,AEGF,AHOmD,AEFtB,AGZ7B,ACQI,ELJF,EEGF,AEPA,ACQI,GAAG,CNM4C,AEFtB,ECL7B,AGCU,ELJR,CAAA,ADUiD,CEFtB,EIJb,CAAC,CNMkC,CEFtB,CGZ7B,GJIE,ADUiD,AKdnD,CJIE,ADUiD,AEFtB,AIJnB,CJImB,CFEsB,AMN/C,CJIyB,KDR3B,CAAA,GAAA,CAAA,CAAA,AIJF,CAAA,EJIE,KIJF,CAAA,EJIE,gBIJF,CAAA,CAAA;AJKE,AEEF,AHOmD,AEFtB,AIH1B,ELJD,CKEA,GNOiD,AEFtB,GIHpB,ENK0C,CCTjD,ACO2B,CDP3B,CDSyD,CEF9B,EAAA,KFE8B,CCTzD,ADSyD,CCTzD,KDSyD,CAAO,CCThE,CAAA,GAAA,CAAA,CAAA,GAAA,CDSiD,MCTjD;AACA,AECF,AHO6E,AEFrC,AGXxC,ACSI,ELJF,EILF,ACSI,KAAK,CAAC,ELJR,AECF,AENA,CJKE,CKIO,CDTT,ACSI,QLJF,CAAA,MILF,CJKE,AILF,CJKE,GAAA,CAAA,CAAA,CILF,CAAA,CJKE,OAAA,SILF,CAAA,CAAA;AJMC,AEIC,AGAE,CLTJ,EAAY,CKSR,OHAF,EFToB,GAAV,CESV,AGAe,CHAH,AGAI,IHAhB,CFTU,CAAA,AESgB,EGAX,CAAb,IHAF,EAA2C,CFTjC,KAAA,MESV,CFTU,CAAA,AESwD,UFTxD,GAAU,EAAV,CAAZ;AGFA,ADW6C,AHIzC,AEFA,AGXJ,ACUG,IFZH,ACEA,IFS6C,CHIpC,AEFA,CFEL,EIfJ,CJea,AEFT,CFEA,CIfJ,CFamC,CGXnC,GFS6C,AET7C,IHW2C,CCFE,ADED,EEb5C,CAAA,EDW6C,CAAA,EAAA,ECX7C,ACEA,CDFA,ACEA,GHWmC,CAAwB,GGX3D,CAAA,OHWmC,CAA/B,CEbJ,CAAA,CAAA,ICEA,CAAA,CAAA;AJOA,AEE6C,AHKzC,AEFA,AIDH,CAPyB,EAOvB,CLJS,EEEiC,AGLnB,CAA1B,ENUS,AEFA,CDLT,ADOI,EEFA,CFES,CAAT,CEFW,GCH8B,EDGzB,CCHyB,CAAA,EDG9B,CAAU,UAAV,CAAqB,IAArB,CAAX;AEZJ,ADSoE,AHMhE,AEFA,AGZJ,IDDA,ACCA,KLcS,AEFA,GGZT,ELcI,CIfJ,ACCA,CHYI,CFEa,EEFE,GFEf,AKdJ,CAAA,GHYI,cGZJ,CAAA;AJMA,AGPA,AFcI,CDPJ,QCOS,EDPG,ECOR,GAAY,CDPhB,EAAkB,CCOd;ADNF,AGRF,ADUI,AHMA,AEDA,AGVJ,EJGE,EIHF,IJGE,ADQM,CCRN,AEEO,ADKA,CGVT,EDLA,CDUI,CDKA,CFCW,CCRb,AEEc,CFFd,ACOe,GDPf,AEEE,AHMI,IEDgB,CFCC,ECRvB,ACOyB,MAAV,GFCb,AEDgC,CAAhC,CFCkC;ACPpC,AGTF,ADWI,AHME,AEDF,AGXJ,EJIE,MAAA,CAAA,AEEO,ADKA,EEhBT,AJiBW,ICRT,ACOE,CDPF,AEEE,AHME,EEDY,CDPhB,AEEiB,AHMA,GIjBnB,AFgBsB,EFChB,CCRJ,AGTF,AFgByB,CEgBxB,ADrBG,KDKc,GAAgB,CAA9B;ADNF,AEEE,AHMC,AEDD,AGZJ,EJKE,MAAA,CAAA,AEEO,ADKA,GGZT,CHYI,CAAU,CCLV,CFFF,CAAA,CEEgB,CAAC,ADKf,CDPF,CEEgB,CAAd,ADKkB,KDPpB,ACOyB,KAAvB;ADNF,AGVO,ADYL,AHMD,AEDC,AGTF,EJEA,AGVO,MHUP,CAAA,AEEO,ADKA,EGTP,EDRO,AFiBL,CEjBK,AFiBK,CCLV,CAAY,CFFd,AIFA,CJEA,EGVO,AFiBL,AGTF,CJEA,EGVA,AFiBqB,KCLnB,ADKwB,CDP1B,IGVc,CFiBZ,GEjBF,EAAgC,GAAhC,EAA8C;AHW9C,AGVE,ADYD,ADKC,AGTA,EJEF,MAAA,AGVM,CHUN,ACOO,AGTA,MDRM,AFiBX,AGTA,GDRc,AFiBA,AGTA,EDRd,EHUF,AIFoB,CJEpB,CCOE,EDPF,IIFoB,CAAA,QJEpB,CIFoB,CAAJ,CAAW,EAAX,EAAe,EAAf,CAAd;AJGF,AGVE,AJkBF,AEDC,EDPD,ADQA,KAAA,CCRA,AGVM,AJkBN,CCRA,IGVW,GAAG,CHUd,ADQA,CCRA,ADQA,GCRA,GGVc,CAAA,IHUd,ADQA,EIlBc,CAAO,AJkBrB,KIlBE,CAF4C,CAG5C,KJiBF;ACPD,AGTG,ADWM,AHMN,AKXM,CJJV,CESU,CFTE,KESF,AELA,CJJQ,AESR,CELA,CLWC,CCfC,ADeA,CKXF,ILWO,CGNP,AHMC,AKXD,CJJE,AESF,CFTE,ADeQ,IKXV,CFKA,AHMe,AKXf,CJJE,ADeD,CAAP,CGNF,GFTU,CIIF,EAAA,IJJE,AESK,CFTL,MAAA,GAAM,EAAN,AESV,CFTF,CES6B;AACzB,AHMD,AEDD,AGXQ,EHWR,CFDA,KKVU,CFMH,IAAI,CAAC,CENF,CHWV,CCLe,ADKf,CCLE,AENQ,EFMQ,AENR,CFMS,AENT,GFMY,EDKtB,CAAA,CGXQ,CFMmB,IAAzB,EAA+B,CAAC,CDKlC,CCLE,EAAoC,ADKtC,YAAA;ADJF,AGXI,ADWE,ADKF,AGZM,IJOV,IGXQ,ACIa,CHYZ,CDLT,CEAW,CCXC,AFgBR,AGZiB,CHYR,ECLE,AEPM,CFOL,CCXC,ACII,CAAA,CFOF,CAAb,EAAgB,ADKlB,AGZM,CFOa,ECXN,AFgBQ,CEhBR,ADWS,ADKtB,KCL2B,KCXd,CAAW,CDWtB,EAAkC,CAAC,CCXrC,CDWE,CCX6B,CDWU;AFA7C,AGVM,ADWE,AHMN,AEDE,EFCF,IIjBI,CJiBJ,CAAA,AEDQ,ICLE,CCXC,ADWA,CCXC,CAAD,AFgBI,CEhBX,CJiBJ,CGNgB,AHMhB,AEDkB,CEhBD,CAAC,CAAD,EAAI,AFgBE,CEhBN,ADWN,CAAY,CCXC,ADWb,AHMX,CIjBiB,ADWX,CDKY,CEhBS,ADWA,AHM3B,CIjBiB,CAAb,AFgB2B,KAAK,KFCpC,CEDkB,GAA2B,CAA3C;ADNJ,AGTM,ADWI,AHMN,AEDA,AGbA,MDHE,EFgBI,CGbD,ELcE,CCRX,ACOc,CEhBD,CAAC,CAAD,ADWE,ADKE,CEhBX,AJiBU,CKdZ,EDHe,CAAC,AFgBE,AGbF,CDHD,ADWT,AHMN,CGNkB,CCXC,ADWb,CCXS,ACGK,EDHE,AFgBT,CEhBE,ADWQ,ECXE,ADWnB,ADKqB,CEhBZ,CAAb,GFgB8B,MAAnB,AGbO,CAAA,EHaqB,CAAzC,MGboB,CAAJ,CAAmB,OAAnB,EAA4B,IAA5B,CAAhB;AJWF,AGbI,ADWG,AHMN,AKdC,GLYF,GIfI,GCGG,EJUP,AGbS,GAAG,GHaZ,CAAY,EIVV,EDHU,CAAA,ACGS,EJUrB,AIVE,EJUgC,EGbtB,CAAO,KHanB,CGbI,CHayD,KAA7D,EAA2E;AAAzC,AGZ/B,AFeD,AGZA,QJSgC,CCG3B,AGZA,IHYI,CAAC,EDHsB,CCGnB,AGZb,CHYA,AGZc,EHYE,CDHgB,ACGf,IAAI,CDHW,CAAA,CIThC,CJSgC,GCGhC,EAA8B,CAAC,EAA/B,EAAmC;ADHH,AED5B,AHMN,AEDI,AGZH,ELaD,ICLkC,CDKlC,CAAA,GEDS,ECLE,CFCuB,ACI9B,CAAS,EDJqB,ADKlC,CAAA,CGNM,CAAY,CFCgB,AED5B,ADKF,CAAgB,CCLC,ADKA,CCLf,EHMN,AEDwB,ECLE,CHM1B,EED6B,CCLC,KDKV,ECLU,AHMrB,CGNqB,ADKQ,GAAlC,CFCJ,CGN0B,ADKiB,CCLP,AHMd,AEDlB,CCLsB,EAAa,CAAb,EAAgB,YAAhB,CAApB;AFCqD,AGVzD,ADUG,AHMH,AEDE,QEfE,CJgBC,EEDE,CEfC,EJgBR,AEDE,CAAS,EEfE,AJgBA,IEDX,CFCF,AEDkB,CAAC,EEfN,CAAA,AFeS,KAAK,KEfd,CAAW,AFeN,GAAkB,GEfpC,AFeE,EEf8B,AFeS,KAAK,MAA5C;AEdA,ADUD,AHMF,AEDG,AGZJ,EAAA,CLWA,GIdI,ECGJ,CAAA,EHYS,EEfE,CAAC,AFeR,CEfO,AFeE,CEfT,ECGJ,CDHiB,ACGjB,CDHkB,CAAD,AFeb,EEfiB,CAAJ,EAAO,CAAP,EAAU,CAAV,CAAb,ACGJ,GAAA,YAAA;AJOE,AGTE,ADUH,ADKE,AGZD,GFFM,GCDJ,GHSG,EINE,EDHE,CAAC,CAAD,CHST,AGTE,GHSa,AGTA,CAAC,CAAD,EAAI,CAAJ,ACGR,CAAA,CJMP,AGTsB,CAAP,EAAU,CAAV,CAAb,GCGK,CAAA,CAAY,MAAZ,CAAmB,QAAA,CAAA,UAAA,CAAW,KAA9B,CAAP;AJOA,AGTE,AJgBJ,AKbC,ELaD,CKfA,GDDI,CJgBJ,CAAA,CCPO,EGTE,GAAG,GHSV,ADOF,CAAA,ECPkB,EGTN,CAAA,GJgBZ,ECPE,CGTU,AJgBZ,CIhBmB,KAAf,IJgBK,KAAT,EAAqB;ACNnB,AGTC,ADUH,AHME,AEDA,ECLF,MAAA,CFDO,AECP,AHMO,AEDA,IAAI,CDNT,ADOA,AEDU,GDNG,ADOA,AEDA,CCLf,ADKE,CCLF,CDKkB,CAAC,CDNC,ADOlB,GEDqB,CDNC,EECxB,CDKE,ECLF,ADK6B,CDNC,ACMA,CDNC,CCM7B,EAAgC,EDNhC,KECF;AFAC,AECC,AHMD,AEDG,AGZJ,EAAA,CLWA,KKXA,CAAA,EFOS,ADKA,GAAL,CAAS,CCLC,EEPd,CAAA,EHYI,CCLF,ADKkB,CAAhB,EAAmB,CAAC,GAAG,KAAK,AGZhC,GAAA,GHYuB,GAAkB,GAArC,CGZY,MAAhB,EAAgC,GAAhC,EAA6C;ADF3C,ADUD,ADKG,AGZF,GFKF,KCRM,ACGA,GHYG,CEfC,CCGC,CHYP,CAAS,EEfE,ECGT,CAAY,CHYd,CAAgB,GEfL,CAAA,CFeU,KAArB,AGZE,CAAyB,CHYC,CAAC,CEflB,CAAW,CFeU,CGZ9B,EAAiC,CDHrC,CFeuC,CEfR,ACG3B,CAAJ,EAA2C,EHYb,GAAkB,GAA9C;ADLJ,AGTI,AJeN,AEAM,AGZA,EJMJ,IGTI,ACGA,EJMJ,CAAA,ADMF,EEAW,CGZC,CDHC,ACGA,CDHC,AJed,AEAM,CEfO,AFeE,CEfT,EHSJ,CAAA,AGTiB,CAAC,CAAD,AFeb,EEfiB,CAAJ,ACGb,CAAmB,CDHC,CAAP,CCGb,CDHuB,CHS3B,AGTiB,CAAb,EHSJ,UAAY,GAAZ,EAAyB;AACvB,AGTE,ADUJ,AHxBF,AE6BK,AGZC,CLjBN,CGwBE,CHxBF,GIcM,EDUJ,CFDO,AECP,ICVW,ACGA,CDHC,CAAD,CAAP,CHSF,AINE,CFOJ,CCViB,ADUjB,CFDkB,AGTA,CAAD,EHSf,AGTmB,CAAJ,EAAO,CAAP,ADUjB,ECV2B,CAAV,ADUjB,CCVI,SDUK,GAAT,EAAsB;AFArB,AGTG,ADUK,ADKR,AGZE,GJIH,ACPA,GEAI,EDUK,CAAA,ECVA,CDUA,ECVG,CDUH,CAAA,CAAA,CAAA,ICVG,CAAA,MAAA,CAAO,IAAf;AACD,ADSM,AHzBE,OAAA,CGyBC,AHzBD,CGyBC,GAAA,CHzBD,EGyBC,CAAA,AHzBD,CGyBC,CAAH,GHzBE;AC0BX,AEAE,ADMF,AGbE,EJOF,ACMA,MDNA,CAAA,EEAS,AEPA,KFOK,ADMd,AGbE,CHaF,CDNA,CAAA,GEAS,CAAY,CAAZ,EFAT,AEAwB,ADMxB,CCNS,ADMT,CCNE,CFAF,UCMA,EDNA,CCMA,UAAa,MAAb,EAA2B;ADLzB,AGTA,ADSD,ADMC,AGbD,GFID,AEVA,KDIM,AFeE,GDNC,CGTC,EFeI,GEfC,AFeE,MAAM,CAAC,CEfT,CAAA,OFeE,EAAf,CEfa,CAAW,KAAxB,EAA+B;AHU7B,AGTA,AFeF,MDNE,AGTA,EFeI,IDNE,CGTC,CHSC,AGTA,CAAD,AFeI,CEfX,EFec,CDND,AGTA,CAAC,CAAD,EAAI,CAAJ,AFeO,CAAC,CDNb,AGTY,CHSC,AGTR,EAAU,CAAV,CAAb,EHQK,GCOS,EAAhB;ADLE,AGTA,ADSJ,ADME,AGbF,EFOA,AEPA,IJOI,AGTA,EDSJ,ADMQ,AGbR,CFOA,AEPA,EJOS,AGTA,CFeG,CDND,CGTC,CFeG,GDNC,AEAhB,AEPA,CFOA,AEPA,EHaqB,CEfT,AFeU,CEfV,EHSD,CAAa,AIPxB,CJOW,CEAX,CFA2B,AGTf,AFeG,AGbf,CDFmB,CDSnB,ADME,KEfE,KDSM,AEPV,MFOA,EAAwB;AFFf,AGNN,ADSK,ADMN,AGbA,KJIA,GEGM,AEPF,CHaC,CCNC,GAAA,CEPI,GAAG,EFOP,CAAA,CDMN,CAAkB,AGbA,KFOZ,CDMN,CCNM,CDMoB,GGbb,CAAiB,GHa9B,EAAmC,AGbA,IHanC,OGb8B,CAAiB,MAAjB,GAA0B,CAA3C,CAAb;AJQD,AEDO,ADOP,AGbC,GJEF,ACMA,KCFU,AENJ,MFMI,GAAA,AENK,EFML,CAAA,AENQ,IAAhB,EFMM;ACPN,ADOM,QAAU,GCPT,EDOS,ECPL,CDOK,EAAA,CAAA,ICPL,CAAA,ADOL,SCPK,CAAJ,CAAW,OAAX,EAAoB,GAApB,EAAyB,KAAzB,CAAP;AHUF,AGTC,AFeD,AGdE,EJQF,ACMA,CE7CO,KHuCP,AIRM,CJQN,KIRE,EHcF,AGdc,CHcd,CDNA,CAAA,OCMA,CAAA,ODNA,GAAA,ECMA,GAAA,KDNgB,GAAhB,EAA6B,ACMhB,MAAb,EAA2B;ADLlB,AEHD,ADSN,AGdQ,QJQD,AEHD,ADSA,CDNC,CEHD,AELE,EJQD,AIRC,CFKF,CDSM,CDNL,AIRC,CJQD,CAAA,ACMQ,CDNR,CEHD,CAAA,CELE,CAAA,CHca,CAAC,OCThB,EAAA,ADSS,AGdP,EHcR,AGdQ;AJQD,AGTX,ADMU,ADUN,AGfQ,QJQE,AEHH,ADUD,CDPI,AGTd,ADMW,CELE,CAAA,CJQC,AEHH,ADUG,ECVH,AELE,CJQC,AEHH,ADUM,CDPH,AEHH,AELE,CJQC,AEHJ,AELG,CJQF,AIRE,CAAD,CDDZ,CFgBuB,CAAC,OAAP,EAAb;ADNA,AG1CJ,ADsCU,ADWN,AGhBQ,CDjCZ,EAAA,KDsCc,CAAA,ADWL,CGhBO,CJSL,AITK,CFKF,EAAA,AELE,CFKF,CFIE,AEJF,AELE,CFKN,AELM,CAAA,CAAJ,EHgBR,CAAkB,CDPX,CAAa,CAAb,EAAgB,CAAhB,ACOP,CDPA,CCO0B,CAAC,CAAD,EAAI,CAAJ,CAA1B,EAAkC,IAAlC;ADND,ACOA,GDVD,ACMA;AEZF,ADMI,AENE,MAAA,CDAN,CAAA,CDMS,IAAI,CAAC,CENC,EDAf,ADMiB,CCNjB,ADMI,AENc,CAAC,CFMC,AENF,CDAH,ADMM,CENC,CAAC,CFMC,EENE,CAAR,CAAZ,EFMF,ECNJ,ADMgC,CAAC,EAA7B,EAAiC;AFKnC,AEJI,ADWJ,AGjBG,EJUH,ACOA,GGpBE,GJaF,CAAA,EEJS,AENA,IFMI,CAAC,ADWd,CAAA,CDPA,CAAA,AEJiB,CAAb,EAAgB,CAAC,GAAG,ADWxB,CAAA,CDPA,GAAA,AEJI,EAA2B,CAAC,EAA5B,EAAgC,CDWpC,GAAA,CDPA,SCQE,MADF,EAEE,OAFF,EAGE,IAHF,EAGyC;ADVzC,AEHM,ADeC,AGrBH,MAAA,EJSJ,ACYO,ICfK,AENF,CJSV,CCYO,CGrBM,CJSb,CCYO,GDZP,AITkB,IFMM,ADejB,CAAA,CAAA,CCfoB,ADepB,KGrBM,CFMoB,CAAC,AEN9B,eFMuB,CAAuB,CAAC,CAAD,EAAI,CAAJ,CAAvB,CAArB;AACA,ADcC,AGpBH,QHoBW,GGpBN,CFMG,EDcG,GCdE,ADcF,GCdK,EENhB,CAAiB,CHoBN,CCdU,ADcV,CAAA,CAAR,AGpBH,CAAsB,GFMN,CAAY,CAAC,CEN7B,EFMgC,CAAhB,EAAmB,CAAC,GAAG,CAAvB,CAAd;AFGE,AEFF,ADcI,AGpBN,MAAA,EJQI,AEFF,ADcI,EDZF,GAAA,AEFG,ADcD,CCdE,CENC,CHoBH,EDZF,AIRQ,CAAC,CHoBP,AGpBM,CHoBN,CCdJ,AENc,CFMC,AENL,CAAZ,EJQI,ACYE,SCdJ;AFEE,AEDF,ADaI,AGnBP,QJOM,AEDH,ADaW,EDZR,GAAA,AEDE,CAAC,ADaK,CDZR,CAAA,CAAA,ACYQ,CDZT,GCYS,CCbX,ADaW,CCbI,KDaX,CCbiB,ADUc,CCVb,ADe1B,QCfmB,EAAf;AFCE,AEAH,ADeH,QDfW,EAAA,GAAA,EAAA,CAAA,CAAA,CAAL;AACN,AEAC,ADeD,AGrBA,QJMI,AINA,KAAK,CJMC,GAAG,CAAC,EAAD,CAAb,OINI,CAAqB,MAArB,EAA6B,SAA7B,CAAJ,EAA6C;AJQ7C,AEDD,ADeC,AGrBE,GFNJ,QFaS,AIPA,KJOK,GIPV,CAAc,GJOT,CAAa,GAAb,CAAiB,IIPtB,CAA2B,KJOJ,CIPvB,MJOsB,EAAU,CAAV,EAAW;AACjC,ACcF,AGrBE,aJOO,AIPA,IAAP,GJOc,CAAC,GAAR,CACL,UAAC,KAAD,EAAQ,CAAR,EAAS;AACP,AEFR,ADeE,AGrBC,EFMH,GETE,GFSF,CAAA,EENS,IJQD,GEFR,CFEY,AEFZ,OFEY,AEFZ,CFEY,EEFZ,GFEQ,CACE,CAAC,GAAG,EADN,EAEE,AEJV,CFIW,GAAG,EAFN,EAGE,KAHF,EAIE,KAAK,GAAG,KAAI,CAAC,KAAR,GAAgB,MAAM,CAAC,WAJ9B,CAAA;AAKC,AENP,AENE,OJKO,CAAP,GECK;AFQN,AEPC,ADeF,AGrBE,KJGK,CAAP,AEGE,GDeG,GAAL,CCfS,ADeA,ECfE,KAAK,EDehB,CAAmB,CAAnB,EAAsB,CChBf,ADgBP,EAAyB,KAAK,KAA9B,EAAqC,KAAK,MAA1C;ADPD,AEPG,ADgBF,AGtBE,GJFJ,GEQI,GDgBG,CChBC,EAAE,KAAK,EDgBb;AClBO,ADmBP,AGtBE,KFGF,IDmBK,GAAL,CAAS,AGtBA,KAAP,IHsBF;ADRF,AEPC,AENE,EJaH,CEZA,KFYA,CAAA,SAAA,CAAA,UAAA,GAAA,YAAA;AACE,ACQA,AGrBD,GArBD,MH0CO,EDRE,ECQE,CAAC,EDRE,CCQC,CAAb,EAAgB,CAAC,EDRjB,CCQoB,MAApB,EAA4B,CAAC,EAA7B,EAAiC;ADPlC,AEPD,ADeI,ECfJ,CFKA,KELA,CAAA,EDeS,GAAL,CAAS,GCfb,CAAA,KDeI,GAAqB,ICfzB,GAAA,CDeyB,CAAA,MAAA,CAAO,CCfnB,MAAb,EAA6B,EDezB,CCfJ,EAA0C;AAClC,AEPV,QFOU,CEPV,CFOU,GAAA,EEPV,IFOU,CAAA,OAAA,EAAA;AFQR,AERQ,ADeJ,AGpEN,CAAA,CJ6DE,CI7DF,KJ6DE,AERU,CFQV,ECOS,GCfC,CDeG,CAAC,CCfJ,CFQV,CAAA,AERU,ADeO,CCfP,ADeN,EAAgB,CAAC,GCfb,ADegB,IDPxB,CCOI,EDPJ,ACO+B,CAAC,EAA5B,EAAgC,ODPpC;AACE,AETM,ADgBF,QChBY,GFST,CCOG,CChBM,GFSJ,AETI,CDgBD,CChBC,CAAA,CDgBE,IDPlB,AETM,EDgBkB,CAAC,CAAD,CAAN,CAAU,CAAV,CAAd;ADNL,AI/DU,GJ6DX,II7DW,CAAA,MAAA,GAAA,MAAA;AFsDF,ADgBH,QChBG,CAAA,GAAA,ADgBC,GChBD,CAAA,CAAA,ADgBM,CChBN,ADgBO,KAAN,KAAgB,CAApB,EAAuB;ADL7B,AEXS,ADiBD,EDNR,MAAA,AEXY,CFWZ,AEXY,GAAA,GAAA,ADiBC,CCjBD,CAAA,CFWZ,AEXS,ADiBD,CDNR,ACMiB,QDNjB,CCMQ,EDNR,CCM6B,KAAK,CAAC,KDNnC,ACMQ;ADLN,ACMM,WDNC,ICMI,CDNC,ECMN,CAAS,EDNf,ECMM,EACE;ADNT,AEXC,ADkBQ,GDTV,KETM,CAAC,EDkBI,CClBD,KDkBO,CClBX,EDkBc,CClBD,ADkBT,IAAe,CClBD,IAAlB,ADkBwB,IClBE,CAAC,CDkBvB,EClB0B,CDkBG,GAF/B,CChBiC,CDmB/B,CAAC,KCnBL,CDmBW,GCnBmC,ADmBhC,CCnBiC,ADmB3C,GCnB8C,CAAtD,ADmBuB,ECnBkC,GDmB7B,MAApB,GAA6B,GAH/B,EAIE,KAAK,MAJP,EAKE,KAAK,MALP;ACfJ,ADsBI,aCtBG,EDsBE,GCtBT,ADsBI,CAAS,IAAT;ADXV,AEVK,ADsBK,SDZV,MAAA,ACYe,GAAL,CAAS,WAAT,GAAuB,QAAA,CAAA,MAAA,CAAO,KAA9B;ADnEV,ACoEU,CDpEV,EAAA,YCoEe,GAAL,CAAS,MAAT;ACrBN,ADsBK,QCtBD,GAAG,GAAG,IAAV;AFUJ,ACaO,ODbP,CAAA,SAAA,CAAA,GAAe,MAAf;AETI,ADuBC,ICvBD,GAAG,EAAE,KAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,MAApB,EAA4B,CAAC,EAA7B,EAAiC;AACpC,WAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,KAApB,EAA2B,CAAC,EAA5B,EAAgC;AAC9B,ADsBJ,SAAK,GCrBC,ADqBN,CAAS,ICrBE,KDqBX,GCrBM,CAAc,CAAC,CAAC,GAAG,CAAL,EAAQ,CAAC,GAAG,CAAZ,CAAd,EAA8B,KAA9B,GAAsC,MAAM,CAAC,eAAP,CAAuB,CAAC,CAAD,EAAI,CAAJ,CAAvB,CAAtC,GACA,CAFF,EAGE;AACA,ADmBP,GAvCD,OCoBQ,GAAG,GAAG,KAAN;AACA,gBAAM,GAAN;AACD,ADkBT,SAAA,cAAA;ACjBO,ADzEP,CAAA,EAAA;AC0EK;ADkBL,OAAA,CAAA,SAAA,CAAA,GAAe,cAAf;ACjBI,WAAO,GAAP;AACD,GArBD;;AAsBF,SAAA,MAAA;AA1EA,CAAA,EAAA;;AA4EA,OAAA,CAAA,SAAA,CAAA,GAAe,MAAf","file":"tetris-js.77de5100.js","sourceRoot":"..","sourcesContent":["import { Colors } from './Figure/Figure'\n\ninterface IPoint {\n  x: number\n  y: number\n  value: 0 | 1\n  color: Colors\n}\n\nexport class Point implements IPoint {\n  x: number\n  y: number\n  value: 0 | 1\n  color: Colors\n  constructor(x: number, y: number, value?: 0 | 1, color = Colors.transparent) {\n    this.x = x\n    this.y = y\n    this.color = color\n    if (typeof value !== 'undefined') {\n      this.value = value\n    }\n  }\n\n  getPosition() {\n    return [this.x, this.y]\n  }\n\n  getColor() {\n    return this.color\n  }\n  setColor(color: Colors) {\n    this.color = color\n  }\n\n  setValue(value: 1 | 0) {\n    this.value = value\n  }\n}\n","import { Point } from '../Point'\n\nexport enum FigureType {\n  'first' = 1,\n  'second',\n  'third',\n  'forth',\n}\n\nexport enum Colors {\n  green = 'green',\n  blue = 'blue',\n  black = 'black',\n  violet = 'violet',\n  transparent = 'transparent',\n  yellow = 'yellow',\n}\n\nexport interface IFigure {}\n\nclass Figure implements IFigure {\n  // Standart size of figure 4 x 2\n  pattern: (0 | 1)[][]\n  position: number[]\n  color: Colors\n  constructor(pattern: (0 | 1)[][], position: number[] = null, color?: Colors) {\n    this.pattern = pattern\n    this.position = position\n    this.color = color || Colors.black\n  }\n\n  setPosition(pos: number[]) {\n    this.position = pos\n  }\n\n  getSize() {\n    return {\n      height: this.pattern.length,\n      width: this.pattern[0].length,\n    }\n  }\n\n  getPatternValue(pos: number[]) {\n    const [x, y] = pos\n    return this.pattern[y][x]\n  }\n\n  getPoints() {\n    const [dX, dY] = this.position\n    let points = [[]]\n\n    return this.pattern.map((ptrnRow, y) => {\n      return ptrnRow.map(\n        (value, x) =>\n          new Point(\n            x + dX,\n            y + dY,\n            value,\n            value ? this.color : Colors.transparent\n          )\n      )\n    })\n  }\n\n  getPattern() {\n    return this.pattern\n  }\n\n  getPosition() {\n    return this.position\n  }\n\n  getColor() {\n    return this.color\n  }\n}\n\nexport default Figure\n","import { Point } from './Point'\nimport Layout from './Layout/Layout'\nimport Figure, { Colors } from './Figure/Figure'\n\nclass RendererCanvas {\n  ctx: CanvasRenderingContext2D\n  node: HTMLCanvasElement\n  width: number\n  square: number\n  height: number\n  columns: number\n  rows: number\n  constructor(columns, rows, square = 20) {\n    this.node = <HTMLCanvasElement>document.getElementById('tetris-js')\n    this.ctx = this.node.getContext('2d')\n    this.columns = columns\n    this.rows = rows\n    this.width = columns * square + 1\n    this.height = rows * square + 1\n    this.node.width = this.width\n    this.node.height = this.height\n    this.square = square\n  }\n\n  renderGrid() {\n    this.ctx.lineWidth = 1\n    const columns = this.width / this.square + 1\n    const rows = this.height / this.square + 1\n    for (let i = 0; i <= columns; i++) {\n      this.ctx.moveTo(i * this.square + 0.5, 0)\n      this.ctx.lineTo(i * this.square + 0.5, this.height)\n      this.ctx.stroke()\n    }\n\n    for (let j = 0; j <= rows; j++) {\n      this.ctx.moveTo(0, j * this.square + 0.5)\n      this.ctx.lineTo(this.width, j * this.square + 0.5)\n      this.ctx.stroke()\n    }\n  }\n\n  renderFigure(figure: Figure) {\n    const points = figure.getPoints()\n    const startXY = figure.getPosition()\n    const size = figure.getSize()\n    this.renderPoints(points, startXY, size)\n  }\n\n  renderLayout(layout: Layout) {\n    const points = layout.getPoints()\n    const size = layout.getSize()\n    this.renderPoints(points, [0, 0], size)\n  }\n\n  renderPoints(\n    points: Point[][],\n    startXY: number[],\n    size: { width: number; height: number }\n  ) {\n    let [startX, startY] = startXY\n    const { width, height } = size\n\n    // this.ctx.clearRect(\n    //   startX * this.square + 0.5,\n    //   (startY - 1) * this.square + 0.5,\n    //   width * this.square + 0.5,\n    //   height * this.square + 0.5\n    // )\n\n    this.ctx.clearRect(0, 0, this.width, this.height)\n\n    this.renderGrid()\n    this.ctx.beginPath()\n    for (let i = 0; i < height; i++) {\n      this.ctx.fillStyle = Colors.transparent\n      for (let j = 0; j < width; j++) {\n        const point = points[i][j]\n        if (point.value === 1) {\n          this.ctx.fillStyle = point.color\n          this.ctx.rect(\n            //TODO: Create util for thar\n            (startX + j) * this.square + 0.5,\n            (startY + i) * this.square + 0.5,\n            this.square,\n            this.square\n          )\n          this.ctx.fill()\n          this.ctx.strokeStyle = Colors.black\n          this.ctx.stroke()\n        }\n      }\n    }\n    this.ctx.closePath()\n  }\n}\n\nexport default RendererCanvas\n","import Figure, { Colors } from '../Figure/Figure'\nimport { Point } from '../Point'\n\nexport const sum = (a: number, b: number) => a + b\n\nexport interface ILayout {}\n\nclass Layout {\n  private points: Point[][]\n  private columns: number\n  private rows: number\n  constructor(rows: number, columns: number, defaultValue: 1 | 0 = 0) {\n    this.rows = rows\n    this.columns = columns\n    this.points = [[]]\n    this.create(defaultValue)\n  }\n\n  private create(defaultValue) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        if (!this.points[i]) {\n          this.points[i] = []\n        }\n        this.points[i][j] = new Point(j, i, defaultValue)\n      }\n    }\n  }\n\n  getPoints() {\n    return this.points\n  }\n\n  getPoint(pos: number[]): Point {\n    const [x, y] = pos\n    return this.points[y][x]\n  }\n\n  addFigure(figure: Figure) {\n    const { height, width } = figure.getSize()\n    const [x, y] = figure.getPosition()\n\n    for (let i = 0; i < height; i++) {\n      for (let j = 0; j < width; j++) {\n        const patternValue = figure.getPatternValue([j, i])\n        const point = this.points[y + i][x + j]\n        point.setValue(patternValue)\n        point.setColor(figure.getColor())\n      }\n    }\n  }\n\n  getSize() {\n    return {\n      columns: this.columns,\n      rows: this.rows,\n    }\n  }\n\n  canPosFigure(figure: Figure, pos: number[]) {\n    const { height, width } = figure.getSize()\n    const [x, y] = pos\n\n    if (y + height > this.rows || x > this.columns || x < 0) {\n      return false\n    }\n\n    let res = true\n    out: for (let i = 0; i < height; i++) {\n      for (let j = 0; j < width; j++) {\n        if (\n          this.getPoint([j + x, i + y]).value + figure.getPatternValue([j, i]) >\n          1\n        ) {\n          res = false\n          break out\n        }\n      }\n    }\n    return res\n  }\n}\n\nexport default Layout\n","import Figure, { FigureType, Colors } from './Figure/Figure'\n\nclass FigureMaker {\n  static create(type: FigureType, pos?: number[]) {\n    let pattern = []\n    let color = Colors.black\n    // Will be random value\n    // Should be in empty space\n\n    if (type === FigureType.first) {\n      pattern[0] = [0, 1, 1, 0]\n      pattern[1] = [1, 1, 1, 1]\n      color = Colors.violet\n    }\n\n    if (type === FigureType.second) {\n      pattern[0] = [1, 1, 1, 1]\n      pattern[1] = [0, 0, 0, 1]\n      color = Colors.green\n    }\n\n    if (type === FigureType.third) {\n      pattern[0] = [1, 1, 1, 1]\n      pattern[1] = [1, 0, 0, 0]\n      color = Colors.blue\n    }\n\n    if (type === FigureType.forth) {\n      pattern[0] = [1, 1, 1, 1]\n      color = Colors.yellow\n    }\n\n    return new Figure(pattern, pos, color)\n  }\n}\n\nexport default FigureMaker\n","import RendererCanvas from './RendererCanvas'\nimport Layout from './Layout/Layout'\nimport FigureMaker from './FigureMaker'\nimport Figure, { FigureType } from './Figure/Figure'\n\ninterface ITetris {}\n\nexport class Tetris implements ITetris {\n  renderer: RendererCanvas\n  layout: Layout\n  figureStack: Figure[]\n  constructor() {\n    this.layout = new Layout(20, 10)\n    const { columns, rows } = this.layout.getSize()\n    this.renderer = new RendererCanvas(columns, rows)\n    this.figureStack = []\n    this.renderer.renderGrid()\n  }\n\n  createFigure() {\n    return FigureMaker.create(FigureType.first)\n  }\n\n  changePosFigure(figure: Figure, pos: number[]) {\n    if (this.layout.canPosFigure(figure, pos)) {\n      figure.setPosition(pos)\n      return true\n    }\n    return false\n  }\n\n  runStep() {\n    let figure = this.figureStack[this.figureStack.length - 1]\n    let figurePos = null\n    if (figure) {\n      const [x, y] = figure.getPosition()\n      figurePos = [x, y + 1]\n    } else {\n      figure = this.createFigure()\n      this.figureStack.push(figure)\n      figurePos = [2, 0]\n    }\n\n    if (this.changePosFigure(figure, figurePos)) {\n      this.renderer.renderFigure(figure)\n      return true\n    } else {\n      // this.layout.addFigure(figure)\n      // this.figureStack.pop()\n      // this.renderer.renderLayout(this.layout)\n      return false\n    }\n  }\n}\n","import { Tetris } from './classes/Tetris'\n\nlet tetris = new Tetris()\n\nlet res = tetris.runStep()\n\nlet interval = setInterval(() => {\n  if (res) {\n    res = tetris.runStep()\n  } else {\n    alert('!!')\n    clearInterval(interval)\n  }\n}, 200)\n"]}