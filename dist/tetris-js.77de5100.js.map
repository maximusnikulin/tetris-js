{"version":3,"sources":["classes/Point.ts","classes/Figure/Figure.ts","classes/RendererCanvas.ts","classes/FigureMaker.ts","classes/PointsStack/PointsStack.ts","classes/Tetris.ts","index.ts"],"names":[],"mappings":";;;;ACAA,ADAA,AICA,AFAA,AIDA,ILAA,ADAA,AICA,AFAA,AIDA,OLAA,AGCA,CJDA,AECA,AIDA,ELAA,AGCA,CJDA,AECA,AIDA,MLAA,AGCA,CHDA,ADAA,AICA,AFAA,AIDA,CNAA,AECA,AIDA,SLAA,AGCA,CHDA,AGCA,OJDA,AECA,CFDA,AECA,AIDA,CAAA;;ALEA,ADOA,AINa,AFAb,AIDA,ILAY,ADOZ,AENA,AIDI,GFCS,CAAA,CJMb,CMPU,CFCG,EEDA,CLAb,AGCmB,GEDF,CJCjB,MEAoB,CAAD,AEDF,CAAA,CFCc,CAAZ,EAAqB,EED3B,EAAb;ANOA,AIN6C,AFA7C,AICA,MAAM,CAAC,EFDsC,CAAC,GAAG,CAAJ,EEC7C;ALFA,ADOA,AINkD,AFAlD,CDDA,AGCa,UHDD,CDOZ,AENA,SDDA,EAAsB;AACpB,ADWA,AEHA,EDRA,SDWA,AEHA,CDRA,CAAA,GDWA,CAAY,CAAZ,EAAuB,CAAvB,ECXA,ADWkC,CCXlC,CCQA,CAAY,EFGZ,EAAiD,CCXjD,ACQA,CDRA,CCQmB,EDRnB,ADWA,CCXA,CAAA,ADW2E,EEH3E,CDRA,CCQ2B,MDR3B,ACQA,EAAsC;ADPtC,ADUiD,AIPnD,AFI6B,AGX7B,EJIE,EGGF,ACPA,ILcmD,AEHtB,IDP3B,CAAA,ADUiD,CEHtB,CEJ7B,GJOmD,CEHtB,CGX7B,GJIE,ADUiD,AKdnD,CJIE,ADUiD,AEHtB,CAAA,CFGsB,CEHtB,KDP3B,CAAA,GAAA,CAAA,CAAA,AIJF,CAAA,EJIE,KIJF,CAAA,EJIE,gBIJF,CAAA,CAAA;AJKE,ADSiD,AIPnD,AFI6B,EDN3B,IDSiD,AEHtB,KFGsB,CCTjD,ACM2B,CDN3B,CDSyD,CEH9B,EAAA,KFG8B,CCTzD,ADSyD,CCTzD,KDSyD,CAAO,CCThE,CAAA,GAAA,CAAA,CAAA,GAAA,CDSiD,MCTjD;AACA,ADQ2E,AIP7E,AFIwC,AGVxC,EJKE,EILF,QJKE,AGCF,CHDE,IILF,GAAA,GJKE,CAAA,OAAA,CAAA,GAAA,AILF,CJKE,AILF,CJKE,GAAA,GILF,CAAA,GJKE,YILF,CAAA,CAAA;AJMC,AGIC,CHTF,EAAY,QGSV,EHToB,GAAV,MGSV,CHTU,AGSE,CHTF,MGSV,EAA6B,EHTnB,EGSV,EAA2C,CHTjC,OAAA,CAAA,GGSV,EAAkE,KHTxD,GAAU,EAAV,CAAZ;AEFA,AHeI,AIJyC,AFCzC,AGVJ,IFFA,AEEA,IDS6C,CJIpC,AEHA,CFGL,EGfJ,AEEA,CLaa,AEHT,CFGA,CGfJ,AEEA,CHUmC,IEDU,ECT7C,CAAA,CHU2C,CEDE,AFCD,ECZ5C,CAAA,ECW6C,CAAA,EAAA,EDX7C,CAAA,GDYmC,CAAwB,AGV3D,CAAA,UHUmC,CAA/B,CCZJ,CAAA,CAAA;AFSA,ADOI,AILyC,AFEzC,IDJQ,EGEiC,GJKpC,AEHA,CDJT,ADOI,EEHA,CFGS,CAAT,CEHW,GEF8B,EFEzB,CEFyB,CAAA,EFE9B,CAAU,UAAV,CAAqB,IAArB,CAAX;ACXJ,AHeI,AINgE,AFGhE,AGXJ,IFDA,AECA,KLcS,AEHA,KFGL,CGfJ,CDYI,CFGa,AKdjB,EHWmB,CGXnB,ELcI,EEHoB,GAAG,MAAR,EGXnB,CHWoC,AGXpC,CHWI,MGXJ,CAAA,2BAAA,CAAA,CAAA;AJMA,AEPA,ADaI,CDNJ,QCMS,EDNG,ECMR,GAAY,CDNhB,EAAkB,GCMI,GAAG,MAAT,GAAkB,CAA9B;ADLF,AERF,AHgBI,AINA,AFIA,AGRJ,EJEE,EIFF,IJEE,ADQM,CCRN,AGEO,AFIA,CGRT,EFNA,CCUI,CFIA,CFEW,CCRb,AGEc,CHFd,ACMe,GDNf,ADQM,AINJ,EFIkB,GFEG,AEFA,CAArB,CDNF,SDQE,EAAkC;ACPpC,AETF,AHiBM,AINF,AFIA,AGTJ,EJGE,MAAA,CAAA,AGEO,AFIA,ECfT,AHiBW,ICRT,ACME,CDNF,ADQI,AINF,EFIc,CDNhB,ADQiB,AINA,GDXnB,EHiBM,AEFkB,CDNtB,AETF,CAgCC,ACrBG,CFIuB,CAAvB;ADLF,ADQG,AIND,AFIA,AGVJ,EJIE,MAAA,CAAA,AGEO,AFIA,GGVT,CHUI,CAAU,CEJV,CHFF,CAAA,CGEgB,CAAC,AFIf,CDNF,CGEgB,CAAd,AFIkB,KDNpB,ACMyB,KAAvB;ADLF,AEVO,AHkBN,AINC,AFIA,AGFF,EJJA,AEVO,MFUP,CAAA,AGEO,AFIA,EGFP,EFdO,ADgBL,CChBK,ADgBK,CEJV,CAAY,CHFd,AIIA,CJJA,EEVO,ADgBL,AGFF,CJJA,EEVA,ADgBqB,KEJnB,AFIwB,CDN1B,IEVc,CDgBZ,GChBF,EAAgC,GAAhC,EAA8C;AFW9C,AEVE,ACYD,AFIC,AGFA,EJJF,MAAA,AEVM,CFUN,ACMO,AGFA,MFdM,ADgBX,GChBc,ADgBA,EChBd,AEcA,EJJF,CAAA,AIIqB,CHEnB,EDNF,CIIyB,YJJzB,CIIyB,CAAA,SAAA,CAAJ,CAAgB,EAAhB,EAAoB,EAApB,CAAnB;AJHF,AEVE,AHkBF,AEFC,EDND,ADQA,KAAA,CCRA,AEVM,AHkBN,CCRA,IEVW,GAAG,CFUd,ADQA,CCRA,ADQA,GCRA,GEVc,CAAA,IFUd,ADQA,EGlBc,CAAO,AHkBrB,KGlBE,CAF4C,CAG5C,KHiBF;ACPD,AETG,AHiBA,AINM,ACCA,CJVV,CGSU,CHTE,KIUF,CJVQ,CIUR,CLKC,CCfC,ADeA,CINF,ACCA,CDDA,GJMO,CAAN,AKLD,CJVE,CAAA,ADeQ,GINV,CAAA,CJMe,CCfb,ADeD,CAAP,EKLM,CDDA,ACCA,CJVE,EGSV,ICCQ,CJVE,CAAA,AIUF,IDDO,EHTL,GAAM,EAAN,CAAZ,IGSE,EAA2B;AJO1B,AINC,AFIF,AGJQ,EHIR,CFAA,KKJU,CDAH,IAAI,CAAC,CCAF,CHIV,CEJe,AFIf,CEJE,ACAQ,EDAQ,ACAR,CDAS,ACAT,GDAY,EFItB,CAAA,CGJQ,CDAmB,IAAzB,EAA+B,CAAC,CFIlC,CEJE,EAAoC,AFItC,YAAA;ADHF,AEXI,ACWE,AFIF,AGLM,IJCV,IEXQ,AEUa,CHKZ,CDJT,CGAW,CDXC,ADeR,AGLiB,CHKR,EEJE,ACDM,CDCL,CDXC,AEUI,CAAA,CDCF,CAAb,EAAgB,AFIlB,AGLM,CDCa,EDXN,ADeQ,CCfR,ACWS,AFItB,KEJ2B,KDXd,CAAW,CCWtB,EAAkC,CAAC,CDXrC,CCWE,CDX6B,CCWU;AHA7C,AEVM,AHiBJ,AINM,EJMN,IGjBI,CHiBJ,CAAA,IINU,CDXC,ACWA,CDXC,CAAD,CAAP,CHiBJ,CAAA,AINgB,CDXC,CAAC,CAAD,EAAI,CAAJ,ACWN,CAAY,CDXC,AHiBxB,AINW,CDXM,ACWX,EDXqB,AHiB3B,AIN2B,CDXV,CAAb,UHiBJ;ACPF,AETM,AHiBF,AINM,AFGN,AGLA,MFTE,GDcG,AGLA,ELQE,CCRX,CETa,ADcA,CCdC,ADcA,CCdD,ACWE,ACFX,CFTE,AHiBU,CEHC,CAAb,AGLc,CFTC,CAAC,ADcA,AGLhB,CFTe,AHiBf,AINM,AFGW,CEHC,CDXC,ACWb,CDXS,CDcM,CCdC,CAAP,ACWQ,EDXE,ACWnB,CDXS,ADcW,CCdxB,MDcF,EAAmC,CAAC,EAApC,EAAwC;ADA1C,AEbI,AHiBH,AINM,AFGH,AGLF,GLMF,GGfI,GESG,EJIP,AEbS,ADcA,GCdG,ADcR,AGLF,CHKW,EDDb,AIJe,CJIH,GCCR,CCdQ,ADcQ,CCdR,ADcS,CGLC,CJItB,CCCwB,CDDU,AIJT,EFTb,CAAO,CDcU,CGLC,GJI9B,CEbI,CFayD,ACCzC,CGLlB,EHKoC,EDDtC,CCCI,CDDuE,CCChC,CAAvC;ADD8B,AEZ/B,ADcC,AGLF,QJGgC,CIH3B,EHKE,GAAL,CAAS,AGLX,CJGgC,EIHlB,GJGkB,ACE9B,CAAgB,AGLA,CHKC,EGLE,CJGW,ACEV,CDFU,EAAA,CIHN,CHKC,KGL3B,CHKkB,GAAkB,GAAlC,EAAuC,KAAK,MAA5C;ADF8B,ADKlC,AINM,AFIF,AGLF,ELOF,ICLkC,CDKlC,CAAA,CKPO,EHKE,EEJE,CHCuB,ACG9B,CAAS,EDHqB,ADKlC,AKPE,CLOF,CINM,CAAY,ACDA,CJEgB,AGD5B,AFIF,EEJiB,CAAf,ACDgB,ELOtB,EIN0B,CJM1B,GIN8B,OJMrB,AINqB,CAAA,ACDR,CAAA,GLOtB,CIN0B,CJMJ,AINc,CAAV,EAAa,CAAb,ACDJ,CAAJ,CDCwB,ACDL,KAAK,KAAxB,EDCQ,ACDuB,CDC3C,ICDgD,MAApC,CAAhB;AJEyD,AEVzD,AHgBA,AING,AFIF,AGLD,QFTI,CHgBC,AKPA,GFTG,EHgBR,GGhBa,AHgBA,GKPb,ELOA,CKPmB,EFTN,AESb,CFTa,UAAA,CAAW,MAAxB,EAAgC;AAC9B,AHgBH,AINE,ACDD,GLKF,GGdI,GESG,IFTI,CAAC,CAAD,CAAP,CESF,CAAc,CFTC,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CESf,CFTyB,CAAV,CAAb;AFUF,AETE,ACUH,AFIC,AGLA,GDRM,GDDJ,GFSG,ACKA,AGLA,IFTI,ADcA,CCdC,ADcA,CCdD,AEST,CJAA,AETE,CDcW,CAAb,AGLc,CJAC,AETA,CAAC,ADcA,CCdD,ADcE,ECdE,AESnB,CFTe,CDcM,CDLrB,AETsB,CAAP,EAAU,CAAV,ADcW,CCdxB,GDcF,EAAgC,CAAC,EAAjC,EAAqC;ADJrC,AETE,AHgBJ,AEFI,AGLF,ELOF,IGhBI,CHgBJ,CAAA,CCPO,AIAA,EFTE,ADcA,GCdG,ADcR,CAAS,EDLX,ADOF,CAAA,ECPkB,CCKd,CCdQ,ADcQ,AGLlB,CFTU,ADcR,EAAmB,CFEvB,AEFwB,EDLtB,CETU,AHgBZ,AEF2B,CCdR,IDca,CCd5B,IHgBK,CEFc,GAAkB,CFEzC,EAAqB,AEFjB;ADJF,AETC,AHgBD,AINF,AFII,AGLH,EDCD,OHDO,ADOA,EEFE,EEJT,CHDE,ADOA,AINF,AFII,CAAS,EDLE,ADOA,IEFX,CDLgB,ADOlB,AEFkB,CEJpB,CAAA,EHDwB,CCKC,KDLK,ACK1B,CDL2B,AGC/B,CFIgC,CAAC,CEJjC,EHDE,ACKkC,KAAK,KEJzC,CFIgC,GAAkB,GAA9C;ADJH,ADOA,AINC,AFIE,GFAJ,KIJM,GFIG,GEJG,AFIR,CAAS,EEJW,EAAtB,EFIE;ACbF,ACUA,AFIC,AGLH,EAAA,MFTM,AESN,CDCO,ACDP,GFTU,GCUR,CAAY,CDVC,CESf,CAAA,IDCE,CAAoB,CDVP,CAAA,KESf,GDCsB,ACDtB,EFTe,CAAW,ACUJ,EAAG,GDVvB,EAA+B,EESjC;AJCA,AETI,AHeN,AILM,AFIH,AGLC,EJAF,CCRA,GCDI,ACUA,EHDJ,CAAA,ADMF,AILS,CAAC,CCDC,EFTE,CAAC,AHed,CGfa,CAAP,CCUA,CHDJ,AGCgB,CHDhB,AETiB,CAAC,CAAD,EAAI,CAAJ,AESR,CAAA,CFTe,CAAP,CCUD,CDVW,CFS3B,AETiB,CAAb,EFSJ,AGCgB,CCDP,CDCY,ACDZ,CAAY,MAAZ,CJAG,AIAgB,GJA5B,EAAyB,GIAG,CAAA,UAAA,CAAW,KAA9B,CAAP;AJCA,AETE,AHdN,AIuB2B,ACAxB,CLvBH,EAAA,AKqBE,GFPI,GFSG,IETI,CAAC,CAAD,ACSc,CDTrB,CFSF,EETe,CFSC,AETA,CAAD,ACSc,CAAC,CHA9B,AETmB,CAAJ,EAAO,ACSC,CDTR,ACSoB,EDTV,CAAV,CAAb,CCSqB,CAAA;AHCxB,AETG,ACQuC,AFM3C,EAAA,CDPA,GEPI,CCQA,IDRK,GAAG,EDcZ,CAAA,KCdY,CAAA,GDcZ,CAAA,ECdY,CAAO,IAAf,KDcJ,GAAA,UACE,MADF,EAEE,YAFF,EAOG;ACpBA,AHhBQ,AIwBR,AFKH,AGJA,EAAA,GDHE,EJtBS,CAAA,AE6BX,AGJA,CAAA,ILzBW,AE6BX,GF7BW,AE6BX,EGJA,CAAA,CHIA,CF7BW,qBKyBX,GAAA,UAAwB,MAAxB,EAAwC,WAAxC,EAAgE;AJChE,AGDE,ACCA,EJAF,MAAA,AIAQ,CJAR,EGDS,MAAP,CHCF,CAAA,CIAoB,GAAG,GJAvB,GAAA,AIA6B,CAAC,SAAP,EJAvB,AIAE;AJCA,AETA,ACQD,AFKC,GEXF,KDFM,ADaJ,GDJO,CETC,KAAK,GDab,KCba,ADab,CCba,IDab,CAAA,EAAA,GCba,CAAW,KAAxB,EAA+B;AFU7B,AETA,ADYF,AGJM,MJCJ,AETA,ADYF,EGJM,EAAA,EJCE,CETC,AEQH,CJCI,AETA,CAAD,CAAP,EDYF,CDHe,AETA,AEQT,CFRU,AEQV,CFRS,ADYf,ECZmB,CAAJ,EFSL,AETY,CFSC,AETR,EAAU,CAAV,CAAb,AEQI,EJAC,AIAD;AJEJ,AETA,ACQJ,AFII,AGLI,EDCR,IHCI,AETA,EDYA,AGLK,CHKJ,CGLI,CJEA,AETA,ADYF,CADL,CDFS,AGDX,ACDS,CFPG,ACQZ,CCDS,CAAA,CAAA,CJEO,AIFR,IFPI,CAAA,ACQZ,CAAA,CHCW,CAAa,CAAb,EAAgB,AETf,CAAO,ECQnB,GAAA,CDRI,SCQK,GAAT,EAAsB;AHDb,AENN,ACQM,AFIL,AGNI,KJAN,GGEO,AFIL,AGNS,CDEJ,AFIJ,CGNQ,CHMN,CEJE,AFEP,CGJW,EDEJ,ACFI,CDEJ,ACFI,CDEJ,ACFI,CDEJ,ACFD;AJIP,AGFQ,AFKL,GDRJ,KGGY,AFKR,CELQ,GAAA,CFKH,EELG,AFKD,CELC,CAAA,CAAH,EFKO,KAHd;ACRA,ACOA,AFKE,AGPF,QHOE,AGPI,GFLC,ACOA,GFKC,CCZG,CCOC,AFKF,GGPO,EHOF,CELR,ACFa,CFLT,ACOQ,CDPR,ACOJ,EAAe,CAAf,CAAP,KDPW,AEKoB,CFLxB,AEKyB,CFLd,OAAX,CEKa,CFLO,CEK3B,EFLO,EAAyB,KAAzB,CAAP;AFUF,AETC,ACOA,AFAC,AGDA,EJGF,CEvCO,ACkCP,IFGE,CDEF,CAAA,EIHS,OJGT,CAAA,GIHoB,CAAC,GAAZ,CAAgB,OJGzB,GAAA,AIHyB,KAAA,EAAK,GJGd,GAAhB,EAA6B;AACpB,ACEN,AGLO,QJGD,CAAA,CIHC,EJGD,AIHC,GJGD,AIHC,CJGD,CAAA,CAAA,EIHC,CAAA,WAAA,EAAA;AJGD,AETX,ACQE,ACFU,EDEV,MHCY,CAAA,AETd,CEMa,CAAA,CJGC,CGDZ,CAAA,ACFW,CJGC,CAAA,AIHD,CJGC,AIHD,CJGF,AIHE,CAAD,CFNZ,GCQE,CAAA,SAAA,GAAA,UAAU,MAAV,EAAwB;AHEtB,AE1CJ,ACyCU,AFIN,AGPQ,CFtCZ,EAAA,KCyCU,AFIA,EEJA,ACHM,CJIL,AIJK,EDGN,AFIK,CGPC,EJIA,ACGE,AGPF,CAAA,CAAA,CDGN,ACHE,CDGF,CFIa,EDHZ,CAAa,CAAb,CCGP,CDHuB,AGDjB,CHCC,CAAP,AGDM;AHEP,AGFO,AFKN,GDNF,KGCU,AFKF,MELE,AFKI,GELJ,AFKO,EELP,CAAA,EFKY,IELd,EFKN;ACZJ,ACOU,AFON,AGTE,OFLN,CAAA,ACOoB,CFOX,CGTG,EHSR,CEPgB,AFOP,GEPO,CDPpB,CAAA,ACOoB,CAAA,CCFE,CFLP,CDcX,CAAmB,AGTE,CDEf,AFON,EAAsB,CAAtB,EAAyB,GCd7B,EDcI,CGTiC,CHSD,AGTE,IAAb,CAAkB,CHSvC,SGTuC,QAAA,EAAQ;AJMjD,ACKE,AGVU,EJKZ,MAAA,CAAA,ACKO,GAAL,AGVU,CHUD,CGVC,GAAA,CJKZ,CAAA,GCKE,GGVU,CAAA,EJKZ,GAAA,MILY,EAAA,IJKZ;AAAA,AGHQ,AFSN,AGXU,QJKZ,AGHQ,CFSD,CETC,ECFK,CJKb,AGHQ,ECFK,CJKb,EILa,CDEL,AFSN,CDNF,AGHQ,ACFK,CAAA,CAAA,CAAD,QDEJ,EAAA;AAAA,AFWN,AGbU,IHaV,IEXO,CAAA,CFWD,CAAC,CEXA,ACFS,EDET,CAAA,ACFS,CDET,CAAD,CFWN,AGbgB,CHaD,CGbC,CAAA,CAAA,CAAN,MHaK,KAAA,EAAK;ADPd,AGJA,AFYJ,MAAA,EDRI,AGJI,CAAA,CHIJ,CCQA,CEZI,AFYH,CDRD,CGJI,CAAA,AFYR,CEZQ,AFYC,CEZL,CHIA,OCQJ,CDRI,ECQiB,QAAA,CAAA,MAAA,CAAO,WAA5B;ADRI,AILF,QJKG,EAAA,GAAA,EAAA,AILI,CJKJ,CAAA,CAAD,AILQ,KAAK,CAAR,IAAa,GAAG,KAAK,CAA5B;AJKE,AGFN,AFWE,AGbC,OAHkB,CJOV,AIPT,CDKG,CHEM,ACSL,GDTK,AGFF,CAAC,CHEC,ACSA,CDTA,ACSC,CDTD,AGFE,CHEP,AGFN,EAAgB,CAAC,AFWX,GEXc,EFWE,CAApB,EAAuB,CEXzB,EAA4B,CAAC,EAA7B,EAAiC;AHIjC,AGHE,AFWQ,AGZR,QJIE,GGHG,CFWG,CGZD,CJIC,ACQA,CEXC,CAAC,CHGU,ACQZ,EDRV,AGHe,CAAb,EAAgB,AFWR,CEXS,AFWT,AGZS,GDCG,CCDC,IDCrB,CCDA,CDC2B,CAAC,AFWpB,EEXR,AFWQ,EEXwB;AHIlC,AGHI,AFUM,AGXT,KARM,CAAP,GJYK,GGHK,AFUC,CAAA,GDPX,ACOW,CDPE,CCOF,CAAA,CAAA,CAAD,GDPV,AGHsB,CHGD,EGHI,MAAM,CAAC,CHGV,OAAD,EAAU,CAAV,EAAW,EGHP,CAAuB,CAAC,CAAD,EAAI,CAAJ,CAAvB,CAArB;AHIF,AGHE,AFSM,AGVX,GAdD,SDeY,AFSI,CDNL,ACMK,GAAA,CETC,CFSD,CAAA,CDNE,AGHE,AFSJ,CDNG,ACMP,IETa,GHGd,CAAgB,EGHP,CAAY,CAAC,GAAG,CAAhB,EHGQ,AGHW,CAAC,GAAG,CHGhB,AGHP,CAAd,CHG6B,CAAR,EAAS;AAC9B,AGHA,QAAA,KAAK,CAAC,CHGN,MAAM,CAAC,AGHP,CAAe,GHGf,CACE,IAAI,IGJN,GHIM,CAAA,KAAJ,CACE,CAAC,GAAG,EADN,EAEE,CAAC,GAAG,EAFN,EAGE,KAHF,EAIE,KAAK,GAAG,KAAI,CAAC,KAAR,GAAgB,MAAM,CAAC,WAJ9B,CADF,CAAA;AAOC,AGTD,AFQA,AGTN,EAAA,KJEW,CAAP,AGDE,AFQA,AGTN,CAAA,IDCW,AFQD,CERE,AFQD,GAAL,CAAS,AGTf,CAAA,GDCM,CAAe,GCDrB,CHSM,EERqB,ACD3B,CDC4B,AFQD,KAAK,CAAC,EERZ,EAAf,CFQA,AGTN;AJYG,AGVE,ACDH,IAAA,CJAA,IIAK,CAAC,UAAD,CAAL;AJYA,AGVC,AFOG,AGRJ,IAAA,IHQI,GDGG,ECHC,CAAC,GDGT,ACHI,AGRS,CHQA,AGRC,IHQV,CGRe,CHSb,OGTO,CAAb;AJYD,AGVA,AFQO,AGTN,GJNF,AGLA,KFoBQ,CAAC,AGTF,GHSK,KAAI,AGTd,CHSe,EGTC,IHSV,AGTN,GHSwB,GAFpB,EAGE,CAAC,GAAG,KAAI,CAAC,MAAT,GAAkB,GAHpB,EAIE,KAAI,CAAC,MAJP,EAKE,KAAI,CAAC,MALP;AGNL,GAJD;AJgBA,AGVA,AFWM,EDDN,AGVA,MHUA,ACCM,CDDN,IGVA,AFWU,CEXV,AFWW,GAAL,CDDN,ACCe,CDDf,GCCM,CEXN,CAAA,KHUA,EGVA,CHUA,EGVA,UHUA,EGVA;AHWE,AGVA,ACDF,EAAA,MAAA,CAAA,EJWS,AGVA,KHUK,EIXd,CAAA,IJWE,SIXF,GAAA,YAAA;AJYC,AGVG,AFUE,AGZN,GJUA,GGRI,EFUE,AGZN,KDEW,AFUD,AGZV,CHYW,CEVE,CCFb,CHYM,CAAS,EEVG,ACFlB,ODCS,EFWH,GAAuB,QAAA,CAAA,MAAA,CAAO,KAA9B;AETF,MAAA,IAAI,EAAE,KAAK;AHWf,AGbS,AFYH,AGZJ,EJaF,EIbE,CDAA,GHaF,ACDM,CDCN,CIbQ,CAAC,EHYC,CAAC,GAAL,CDCN,ACDe,CDCf,KCDM,GGZJ,CAAwB,EJa1B,GAAA,IIbE,EAAmC,MJarC,IIbqC,CAAA,EAAC;AJcpC,AGVD,AFSI,AGZD,GDFJ,OCEU,CJaD,KAAK,AIbE,GAAG,KJajB,AIbqB,CAAC,WAAL,CAAiB,KAAI,CAAC,WAAL,CAAiB,MAAjB,GAA0B,CAA3C,CAAf;AJcH,GAFD;AGPA,AFSI,AGbA,EDIJ,IFSI,IGbK,CHaD,AGbE,CHaD,AGbE,CDIX,CAAA,CFSI,CAAS,GGbJ,IDIT,CAAA,ACJuB,CHanB,CGbK,IAAoB,CAAC,CAAC,OAAF,GDI7B,ECJ2C,CDI3C,CCJQ,IAA0C,CAAC,IDIhC,ECJf,EAAuD,EDI3D,EAAmC,GAAnC,EAAgD;AHWhD,AGVQ,AFSL,AGbG,EJcN,GCnBE,GDmBF,AGVQ,CHUR,CGVQ,GAAA,KHUR,CAAA,AGVQ,CAAA,OHUR,AGVQ,EAAA,CHUR,YAAA;AACE,AGXM,AFUP,AGbI,GHvBL,KE0BU,GHWD,GGXC,EHWI,CGXJ,EAAA,CAAA,CHWR,KGXM;AHYP,AGZO,GHUR,KGVkB,KAAA,GAAA,EAAA,CAAA,KAAV;AFWV,AGZY,SHYZ,CGZY,EAAA,GAAA,MAAA,CAAA,CHYZ,UGZY,EAAA;AJcZ,AGZW,AF9DX,AG4DY,CH5DZ,EAAA,KE8DW,CHYX,AGZW,CCFE,CAAA,CDEF,ECFE,CJcb,AGZW,CAAA,ACFE,CDEF,ACFE,CDEF,ACFE,CAAD;AJ3CZ,AG6CW,ACFC,CJ3CZ,EAAA,KG6Cc,CAAA,CCFE,CAAA,CDEF,ECFE,CDEF,CAAA,ACFE,CDEF,ACFE,CDEL,ACFK,CAAJ;AHcZ,OAAA,CAAA,SAAA,CAAA,GAAe,cAAf;ADEA,AGZI,ACFE,OJcN,CAAA,AGZQ,CAAC,CCFC,EDEE,ICFN,CJcN,CAAA,AGZQ,GHYO,AGZM,KAAK,CHY1B,GGZQ,IAA0B,CAAC,GAAG,KAAJ,GAAY,KAAK,OAA3C,IAAsD,CAAC,GAAG,CAA9D,EAAiE;AAC/D,aAAO,KAAP;AACD,ACFC,UAAI,CAAC,CAAC,OAAF,KAAc,EAAlB,EAAsB;AACpB,QAAA,MAAM,GAAG,CAAC,CAAC,GAAG,CAAL,EAAQ,CAAR,CAAT;ADGJ,ACFG,QDEC,GAAG,GAAG,IAAV;;AACA,ACDE,IDCF,GAAG,EAAE,CCDC,CAAC,CAAC,EDCE,IAAI,CAAC,ACDT,GDCY,CAAb,CCDe,CDCC,CAAC,ACDpB,EAAsB,CDCC,MAApB,EAA4B,CAAC,EAA7B,EAAiC;AACpC,ACDE,QAAA,GDCG,GCDG,CDCC,CAAC,CCDC,CAAC,CDCC,ACDA,CDCb,EAAgB,ACDA,CDCC,ACDN,EAAQ,CDCC,ACDT,CAAT,IDCF,EAA2B,CAAC,EAA5B,EAAgC;AAC9B,ACDD,YDEG,KAAK,QAAL,CAAc,CAAC,CAAC,GAAG,CAAL,EAAQ,CAAC,GAAG,CAAZ,CAAd,EAA8B,KAA9B,GAAsC,MAAM,CAAC,eAAP,CAAuB,CAAC,CAAD,EAAI,CAAJ,CAAvB,CAAtC,GACA,CAFF,EAGE;AACA,UAAA,GAAG,GAAG,KAAN;AACA,ACJJ,UAAI,KAAI,CDIE,ACJD,GDIL,QCJA,CAAiB,kBAAjB,CAAoC,MAApC,EAA4C,MAA5C,CAAJ,EAAyD;ADKtD,ACJD,QAAA,MAAM,CAAC,WAAP,CAAmB,MAAnB;ADKD;AACF,ACLG,QAAA,KAAI,CAAC,YAAL,CAAkB,MAAlB;AACD;ADKH,ACJC,KAtBD,MD0BO,GAAP;AACD,ACJA,GDjBD,ACPA;;AD6BF,ACHE,EAAA,MAAA,CDGF,ACHE,SAAA,CAAA,CDGF,QCHE,GAAA,YAAA;AD3EF,AC2EE,CD3EF,EAAA,KC2EE,KAAA,GAAA,IAAA;;ADKF,ACJI,ODIJ,CAAA,ACJQ,GAAG,GAAG,GDId,CAAA,CCJmB,EDIJ,KCJD,EAAV,IDIJ;ACFI,SAAK,QAAL,GAAgB,WAAW,CAAC,YAAA;AAC1B,UAAM,KAAK,GAAG,CAAC,KAAI,CAAC,OAAL,EAAf;;AAEA,UAAI,KAAJ,EAAW;AACT,QAAA,KAAI,CAAC,OAAL;AACD;AACF,KAN0B,EAMxB,GANwB,CAA3B;AAOD,GAVD;;AAYA,EAAA,MAAA,CAAA,SAAA,CAAA,YAAA,GAAA,UAAa,MAAb,EAA2B;AACzB,SAAK,QAAL,CAAc,YAAd,CACE,KAAK,uBAAL,CAA6B,MAA7B,EAAqC,KAAK,WAA1C,CADF;AAGD,GAJD;;AAMA,EAAA,MAAA,CAAA,SAAA,CAAA,OAAA,GAAA,YAAA;AACE,QAAI,MAAM,GAAG,KAAK,WAAL,CAAiB,KAAK,WAAL,CAAiB,MAAjB,GAA0B,CAA3C,CAAb;AACA,QAAI,SAAS,GAAG,IAAhB;;AACA,QAAI,MAAJ,EAAY;AACJ,UAAA,EAAA,GAAA,MAAA,CAAA,WAAA,EAAA;AAAA,UAAC,CAAA,GAAA,EAAA,CAAA,CAAA,CAAD;AAAA,UAAI,CAAA,GAAA,EAAA,CAAA,CAAA,CAAJ;;AACN,MAAA,SAAS,GAAG,CAAC,CAAD,EAAI,CAAC,GAAG,CAAR,CAAZ;AACD,KAHD,MAGO;AACL,MAAA,MAAM,GAAG,KAAK,YAAL,EAAT;AACA,WAAK,WAAL,CAAiB,IAAjB,CAAsB,MAAtB;AACA,MAAA,SAAS,GAAG,CAAC,CAAD,EAAI,CAAJ,CAAZ;AACA,MAAA,MAAM,CAAC,WAAP,CAAmB,SAAnB;AACD;;AAED,QAAI,KAAK,WAAL,CAAiB,kBAAjB,CAAoC,MAApC,EAA4C,SAA5C,CAAJ,EAA4D;AAC1D,MAAA,MAAM,CAAC,WAAP,CAAmB,SAAnB;AACA,WAAK,YAAL,CAAkB,MAAlB;AACD,KAHD,MAGO;AACL,UAAI,SAAS,CAAC,CAAD,CAAT,KAAiB,CAArB,EAAwB;AACtB,eAAO,KAAP;AACD;;AACD,WAAK,WAAL,CAAiB,SAAjB,CAA2B,MAA3B;AACA,WAAK,WAAL,CAAiB,GAAjB;AACA,WAAK,QAAL,CAAc,YAAd,CAA2B,KAAK,WAAL,CAAiB,SAAjB,EAA3B;AACD;;AAED,WAAO,IAAP;AACD,GA1BD;;AA2BF,SAAA,MAAA;AAvHA,CAAA,EAAA;;AAAa,OAAA,CAAA,MAAA,GAAA,MAAA","file":"tetris-js.77de5100.js","sourceRoot":"..","sourcesContent":["import { Colors } from './Figure/Figure'\n\ninterface IPoint {\n  x: number\n  y: number\n  value: 0 | 1\n  color: Colors\n}\n\nexport class Point implements IPoint {\n  x: number\n  y: number\n  value: 0 | 1\n  color: Colors\n  constructor(x: number, y: number, value?: 0 | 1, color = Colors.transparent) {\n    this.x = x\n    this.y = y\n    this.color = color\n    if (typeof value !== 'undefined') {\n      this.value = value\n    }\n  }\n\n  getPosition() {\n    return [this.x, this.y]\n  }\n\n  getColor() {\n    return this.color\n  }\n  setColor(color: Colors) {\n    this.color = color\n  }\n\n  setValue(value: 1 | 0) {\n    this.value = value\n  }\n}\n","import { Point } from '../Point'\n\nexport enum FigureType {\n  'first' = 1,\n  'second',\n  'third',\n  'forth',\n}\n\nexport enum Colors {\n  green = 'green',\n  blue = 'blue',\n  black = 'black',\n  violet = 'violet',\n  transparent = 'transparent',\n  yellow = 'yellow',\n}\n\nexport interface IFigure {}\n\nclass Figure implements IFigure {\n  // Standart size of figure 4 x 2\n  pattern: (0 | 1)[][]\n  position: number[]\n  color: Colors\n  constructor(pattern: (0 | 1)[][], position: number[] = null, color?: Colors) {\n    this.pattern = pattern\n    this.position = position\n    this.color = color || Colors.black\n  }\n\n  setPosition(pos: number[]) {\n    this.position = pos\n  }\n\n  getSize() {\n    return {\n      height: this.pattern.length,\n      width: this.pattern[0].length,\n    }\n  }\n\n  getPatternValue(pos: number[]) {\n    const [x, y] = pos\n    return this.pattern[y][x]\n  }\n\n  getPoints() {\n    const [dX, dY] = this.position\n\n    let points: Point[] = []\n    this.pattern.forEach((ptrnRow, y) => {\n      return ptrnRow.forEach((value, x) =>\n        points.push(\n          new Point(\n            x + dX,\n            y + dY,\n            value,\n            value ? this.color : Colors.transparent\n          )\n        )\n      )\n    })\n    return points\n  }\n\n  getPattern() {\n    return this.pattern\n  }\n\n  getPosition() {\n    return this.position\n  }\n\n  getColor() {\n    return this.color\n  }\n}\n\nexport default Figure\n","import { Point } from './Point'\nimport Figure, { Colors } from './Figure/Figure'\n\nclass RendererCanvas {\n  ctx: CanvasRenderingContext2D\n  node: HTMLCanvasElement\n  width: number\n  square: number\n  height: number\n  columns: number\n  rows: number\n  constructor(width, height, square = 20) {\n    this.node = <HTMLCanvasElement>document.getElementById('tetris-js')\n    this.ctx = this.node.getContext('2d')\n    this.columns = width / square + 1\n    this.rows = height / square + 1\n    this.width = width + 1\n    this.height = height + 1\n    this.node.width = this.width\n    this.node.height = this.height\n    this.square = square\n  }\n\n  renderGrid() {\n    this.ctx.lineWidth = 1\n    for (let i = 0; i <= this.columns; i++) {\n      this.ctx.moveTo(i * this.square + 0.5, 0)\n      this.ctx.lineTo(i * this.square + 0.5, this.height)\n      this.ctx.stroke()\n    }\n\n    for (let j = 0; j <= this.rows; j++) {\n      this.ctx.moveTo(0, j * this.square + 0.5)\n      this.ctx.lineTo(this.width, j * this.square + 0.5)\n      this.ctx.stroke()\n    }\n  }\n\n  renderPoints(\n    points: Point[],\n    clearMeasure: { x: number; y: number; width: number; height: number } = {\n      x: 0,\n      y: 0,\n      width: this.width,\n      height: this.height,\n    }\n  ) {\n    const width = this.width\n    const height = this.height\n\n    this.ctx.clearRect(0, 0, width, height)\n\n    this.ctx.beginPath()\n    this.renderGrid()\n\n    points.forEach(point => {\n      this.ctx.fillStyle = Colors.transparent\n      if (point.value === 1) {\n        const [x, y] = point.getPosition()\n        this.ctx.fillStyle = point.color\n        this.ctx.rect(\n          //TODO: Create util for thar\n          x * this.square + 0.5,\n          y * this.square + 0.5,\n          this.square,\n          this.square\n        )\n        this.ctx.fill()\n        this.ctx.strokeStyle = Colors.black\n        this.ctx.stroke()\n      }\n\n      this.ctx.closePath()\n    })\n  }\n}\n\nexport default RendererCanvas\n","import Figure, { FigureType, Colors } from './Figure/Figure'\n\nclass FigureMaker {\n  static create(type: FigureType, pos?: number[]) {\n    let pattern = []\n    let color = Colors.black\n    // Will be random value\n    // Should be in empty space\n\n    if (type === FigureType.first) {\n      pattern[0] = [0, 1, 1, 0]\n      pattern[1] = [1, 1, 1, 1]\n      color = Colors.violet\n    }\n\n    if (type === FigureType.second) {\n      pattern[0] = [1, 1, 1, 1]\n      pattern[1] = [0, 0, 0, 1]\n      color = Colors.green\n    }\n\n    if (type === FigureType.third) {\n      pattern[0] = [1, 1, 1, 1]\n      pattern[1] = [1, 0, 0, 0]\n      color = Colors.blue\n    }\n\n    if (type === FigureType.forth) {\n      pattern[0] = [1, 1, 1, 1]\n      color = Colors.yellow\n    }\n\n    return new Figure(pattern, pos, color)\n  }\n}\n\nexport default FigureMaker\n","import Figure, { Colors } from '../Figure/Figure'\nimport { Point } from '../Point'\n\nexport const sum = (a: number, b: number) => a + b\n\nexport interface ILayout {}\n\nclass PointsStack {\n  private points: Point[][]\n  private columns: number\n  private rows: number\n  constructor(columns: number, rows: number, defaultValue: 1 | 0 = 0) {\n    this.rows = rows\n    this.columns = columns\n    this.points = [[]]\n    this.create(defaultValue)\n  }\n\n  private create(defaultValue) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        if (!this.points[i]) {\n          this.points[i] = []\n        }\n        this.points[i][j] = new Point(j, i, defaultValue)\n      }\n    }\n  }\n\n  getPoints() {\n    let points: Point[] = []\n    this.points.forEach(row => {\n      row.forEach(point => points.push(point))\n    })\n    return points\n  }\n\n  getPoint(pos: number[]): Point {\n    const [x, y] = pos\n    return this.points[y][x]\n  }\n\n  addFigure(figure: Figure) {\n    const { height, width } = figure.getSize()\n    const [x, y] = figure.getPosition()\n\n    for (let i = 0; i < height; i++) {\n      for (let j = 0; j < width; j++) {\n        const patternValue = figure.getPatternValue([j, i])\n        const point = this.points[y + i][x + j]\n        point.setValue(patternValue)\n        point.setColor(figure.getColor())\n      }\n    }\n  }\n\n  getSize() {\n    return {\n      columns: this.columns,\n      rows: this.rows,\n    }\n  }\n\n  canChangePosFigure(figure: Figure, pos: number[]) {\n    const { height, width } = figure.getSize()\n    const [x, y] = pos\n\n    if (y + height > this.rows || x + width > this.columns || x < 0) {\n      return false\n    }\n\n    let res = true\n    out: for (let i = 0; i < height; i++) {\n      for (let j = 0; j < width; j++) {\n        if (\n          this.getPoint([j + x, i + y]).value + figure.getPatternValue([j, i]) >\n          1\n        ) {\n          res = false\n          break out\n        }\n      }\n    }\n    return res\n  }\n}\n\nexport default PointsStack\n","import RendererCanvas from './RendererCanvas'\nimport FigureMaker from './FigureMaker'\nimport Figure, { FigureType } from './Figure/Figure'\nimport PointsStack from './PointsStack/PointsStack'\nimport { Point } from './Point'\n\ninterface ITetris {}\n\nexport class Tetris implements ITetris {\n  renderer: RendererCanvas\n  pointsStack: PointsStack\n  figureStack: Figure[]\n  square: number\n  width: number\n  height: number\n  isFull: boolean\n  interval: NodeJS.Timeout\n  constructor() {\n    this.pointsStack = new PointsStack(10, 20)\n    const { columns, rows } = this.pointsStack.getSize()\n    this.square = 20\n    this.width = columns * this.square\n    this.height = rows * this.square\n    this.renderer = new RendererCanvas(this.width, this.height)\n    this.figureStack = []\n    this.renderer.renderGrid()\n    this.isFull = false\n    this.initListeners()\n  }\n\n  createFigure() {\n    return FigureMaker.create(FigureType.first)\n  }\n\n  getStackAndFigurePoints(figure: Figure, pointsStack: PointsStack) {\n    const figurePoints = figure.getPoints()\n    const [fX, fY] = figure.getPosition()\n    const stackPoints = pointsStack.getPoints()\n\n    return stackPoints.map(point => {\n      const [x, y] = point.getPosition()\n      const matchPoint = figurePoints.find(figPoint => {\n        const [fpX, fpY] = figPoint.getPosition()\n        return fpX === x && fpY === y\n      })\n\n      return matchPoint || point\n    })\n  }\n\n  endGame() {\n    alert('END GAME')\n    clearInterval(this.interval)\n    this.interval = null\n  }\n\n  initListeners() {\n    window.addEventListener('keydown', e => {\n      const figure = this.figureStack[this.figureStack.length - 1]\n      if ((e.keyCode !== 37 && e.keyCode !== 39) || !figure) {\n        return\n      }\n\n      const [x, y] = figure.getPosition()\n\n      let newPos\n\n      if (e.keyCode === 37) {\n        newPos = [x - 1, y]\n      }\n\n      if (e.keyCode === 39) {\n        newPos = [x + 1, y]\n      }\n\n      if (this.pointsStack.canChangePosFigure(figure, newPos)) {\n        figure.setPosition(newPos)\n        this.renderFigure(figure)\n      }\n    })\n  }\n\n  runTetris() {\n    let res = this.runStep()\n\n    this.interval = setInterval(() => {\n      const isEnd = !this.runStep()\n\n      if (isEnd) {\n        this.endGame()\n      }\n    }, 200)\n  }\n\n  renderFigure(figure: Figure) {\n    this.renderer.renderPoints(\n      this.getStackAndFigurePoints(figure, this.pointsStack)\n    )\n  }\n\n  runStep() {\n    let figure = this.figureStack[this.figureStack.length - 1]\n    let figurePos = null\n    if (figure) {\n      const [x, y] = figure.getPosition()\n      figurePos = [x, y + 1]\n    } else {\n      figure = this.createFigure()\n      this.figureStack.push(figure)\n      figurePos = [2, 0]\n      figure.setPosition(figurePos)\n    }\n\n    if (this.pointsStack.canChangePosFigure(figure, figurePos)) {\n      figure.setPosition(figurePos)\n      this.renderFigure(figure)\n    } else {\n      if (figurePos[1] === 0) {\n        return false\n      }\n      this.pointsStack.addFigure(figure)\n      this.figureStack.pop()\n      this.renderer.renderPoints(this.pointsStack.getPoints())\n    }\n\n    return true\n  }\n}\n","import { Tetris } from './classes/Tetris'\n\nlet tetris = new Tetris()\n\ntetris.runTetris()\n"]}